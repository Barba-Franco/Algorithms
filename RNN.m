function Z=RNN(t,Z)
alpha=0.4;omega=-0.25;delta=0.5; 
global sigma NO % Global variables
if NO==3
	x1=Z(1);   y1=Z(2);
	x2=Z(3);   y2=Z(4);
	x3=Z(5);   y3=Z(6);
	elseif NO==4
	x4=Z(7);   y4=Z(8);
	elseif NO==5
	x5=Z(9);   y5=Z(10);
	elseif NO==6
	x6=Z(11);  y6=Z(12);
	elseif NO==7
	x7=Z(13);  y7=Z(14);
	elseif NO==8
	x8=Z(15);  y8=Z(16);
	elseif NO==9
	x9=Z(17);  y9=Z(18);
	elseif NO==10
	x10=Z(19); y10=Z(20);
	elseif NO==11
	x11=Z(21); y11=Z(22);
	elseif NO==12
	x12=Z(23); y12=Z(24);
end
if NO==12
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x12), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6), ...
	y8,-alpha*y8-omega.*x8-delta*x8.^3-sigma.*(x8-x7), ...
	y9,-alpha*y9-omega.*x9-delta*x9.^3-sigma.*(x9-x8), ...
	y10,-alpha*y10-omega.*x10-delta*x10.^3-sigma.*(x10-x9), ...
	y11,-alpha*y11-omega.*x11-delta*x11.^3-sigma.*(x11-x10), ...
	y12,-alpha*y12-omega.*x12-delta*x12.^3-sigma.*(x12-x11)];
	
	elseif NO==11
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x11), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6), ...
	y8,-alpha*y8-omega.*x8-delta*x8.^3-sigma.*(x8-x7), ...
	y9,-alpha*y9-omega.*x9-delta*x9.^3-sigma.*(x9-x8), ...
	y10,-alpha*y10-omega.*x10-delta*x10.^3-sigma.*(x10-x9), ...
	y11,-alpha*y11-omega.*x11-delta*x11.^3-sigma.*(x11-x10)];
	
	elseif NO==10
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x10), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6), ...
	y8,-alpha*y8-omega.*x8-delta*x8.^3-sigma.*(x8-x7), ...
	y9,-alpha*y9-omega.*x9-delta*x9.^3-sigma.*(x9-x8), ...
	y10,-alpha*y10-omega.*x10-delta*x10.^3-sigma.*(x10-x9)];
	
	elseif NO==9
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x9), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6), ...
	y8,-alpha*y8-omega.*x8-delta*x8.^3-sigma.*(x8-x7), ...
	y9,-alpha*y9-omega.*x9-delta*x9.^3-sigma.*(x9-x8)];
	
	elseif NO==8
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x8), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6), ...
	y8,-alpha*y8-omega.*x8-delta*x8.^3-sigma.*(x8-x7)];
	
	elseif NO==7
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x7), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5), ...
	y7,-alpha*y7-omega.*x7-delta*x7.^3-sigma.*(x7-x6)];
	
	elseif NO==6
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x6), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4), ...
	y6,-alpha*y6-omega.*x6-delta*x6.^3-sigma.*(x6-x5)];
	
	elseif NO==5
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x5), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3), ... 
	y5,-alpha*y5-omega.*x5-delta*x5.^3-sigma.*(x5-x4)];
	
	elseif NO==4
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x4), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2), ...
	y4,-alpha*y4-omega.*x4-delta*x4.^3-sigma.*(x4-x3)];
	
	elseif NO==3
	Z=[y1,-alpha*y1-omega.*x1-delta*x1.^3-sigma.*(x1-x3), ...
	y2,-alpha*y2-omega.*x2-delta*x2.^3-sigma.*(x2-x1), ...
	y3,-alpha*y3-omega.*x3-delta*x3.^3-sigma.*(x3-x2)];

end	